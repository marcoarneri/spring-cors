version: '3.8'

services:
  postgres-db:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=password'
    ports:
      - '5433:5432'

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    ports:
      - "2182:2181"

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    ports:
      - "9093:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: full
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

#  kafka-avro-producer:
#    image: your-kafka-avro-producer-image:latest
#    ports:
#      - "8080:8080"
#    depends_on:
#      - kafka
#      - schema-registry
#    environment:
#      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_KAFKA_PRODUCER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#
#  kafka-consumer-listener:
#    image: your-kafka-avro-consumer-image:latest
#    depends_on:
#      - kafka
#      - schema-registry
#    environment:
#      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_KAFKA_CONSUMER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
